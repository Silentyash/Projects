{"ast":null,"code":"var _jsxFileName = \"E:\\\\reacttut\\\\router-demo\\\\demo2\\\\12-adv-starting-project\\\\frontend\\\\src\\\\Pages\\\\EventsDetailPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsDetailPage = () => {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n_s(EventsDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", true);\n_c = EventsDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsDetailPage\");","map":{"version":3,"names":["React","useParams","EventItem","jsxDEV","_jsxDEV","EventsDetailPage","_s","data","useRouteLoaderData","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","EventDetailPage","loader","request","params","id","eventId","response","fetch","ok","json","message","status","$RefreshReg$"],"sources":["E:/reacttut/router-demo/demo2/12-adv-starting-project/frontend/src/Pages/EventsDetailPage.js"],"sourcesContent":["import React from 'react'\r\nimport {useParams } from 'react-router'\r\n\r\nimport EventItem from '../components/EventItem'\r\n\r\nconst EventsDetailPage = () => {\r\n  const data = useRouteLoaderData(\"event-detail\");\r\n\r\n  return <EventItem event={data.event} />;\r\n};\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch details for selected event.\" },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAQ,cAAc;AAEvC,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,IAAI,GAAGC,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBAAOJ,OAAA,CAACF,SAAS;IAACO,KAAK,EAAEF,IAAI,CAACE;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC,CAAC;AAACP,EAAA,CAJID,gBAAgB;AAAAS,EAAA,GAAhBT,gBAAgB;AAMtB,eAAeU,eAAe;AAE9B,OAAO,eAAeC,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMC,IAAI,CACR;MAAEC,OAAO,EAAE;IAA8C,CAAC,EAC1D;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOL,QAAQ;EACjB;AACF;AAAC,IAAAP,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}